INCLUDE DOS.MAC
.MODEL SMALL
.386
.STACK 100H
.DATA


 STRING DB "ECE3210 LAB7!"
 OPTIONS DB "H: Horizontal bars  V: Vertical bars  Q: QUIT"
 COUNT DW $-STRING
 OPTION_COUNT DW $-OPTIONS
 CHOICE DB ?
 RETURN DB ?
.CODE
.STARTUP

MAIN PROC FAR
  MOV AX,@DATA
  MOV DS,AX
  MOV ES, AX
BEGIN:
    CLEAR_SCREEN
     MOV CX, 0000
L111:
    SET_CURSOR 00, CL
    WRITE_CHAR ' ', 1FH, 80
    INC CX
    CMP CX, 50
    JE L2
    JMP L111
L2:

    SET_CURSOR 2,12
    MOV CX,COUNT
    MOV SI,OFFSET STRING
L11:
    PUSH CX         ; SAVE LOOP COUNTER
    MOV AH,9        ; WRITE CHARACTER/ATTRIBUTE
    MOV AL,[SI]     ; CHARACTER TO DISPLAY
    MOV BH,0        ; VIDEO PAGE 0
    MOV BL,1EH    ; ATTRIBUTE
    ;OR BL,7 ; SET BLINK/INTENSITY BIT
    MOV CX,1        ; DISPLAY IT ONE TIME
    INT 10H
    MOV CX,1        ; ADVANCE CURSOR TO
     ADVANCECURSOR ; NEXT SCREEN COLUMN
    ;INC COLOR           ; NEXT COLOR
    INC SI              ; NEXT CHARACTER
    POP CX              ; RESTORE LOOP COUNTER
    LOOP L11



    SET_CURSOR 02,15
    MOV CX, OPTION_COUNT
    MOV SI, OFFSET OPTIONS
L22:
    PUSH CX         ; SAVE LOOP COUNTER
    MOV AH,9        ; WRITE CHARACTER/ATTRIBUTE
    MOV AL,[SI]     ; CHARACTER TO DISPLAY
    MOV BH,0        ; VIDEO PAGE 0
    MOV BL,1EH    ; ATTRIBUTE

    MOV CX,1        ; DISPLAY IT ONE TIME
    INT 10H
    MOV CX,1        ; ADVANCE CURSOR TO
    ;ADVANCECURSOR ; NEXT SCREEN COLUMN

    INC SI              ; NEXT CHARACTER
    POP CX              ; RESTORE LOOP COUNTER
    LOOP L22

    MOV AH,1
    INT 21H
    MOV CHOICE, AL

    CMP [CHOICE], 48H
    JE HORIZ

    CMP [CHOICE], 68H
    JE HORIZ

    CMP [CHOICE], 56H
    JE VERT

    CMP [CHOICE], 76H
    JE VERT

    JMP QUIT


HORIZ:

     CLEAR_SCREEN
     MOV CX, 0000
START:
    SET_CURSOR 00, CL
    WRITE_CHAR ' ', 2FH, 80
    INC CX
    CMP CX, 17
    JE L3
    JMP START
L3:
    SET_CURSOR 00, CL
    WRITE_CHAR ' ', 4FH, 80
    INC CX
    CMP CX, 34
    JE L4
    JMP L3
L4:
    SET_CURSOR 00, CL
    WRITE_CHAR ' ', 1FH, 80
    INC CX
    CMP CX, 45
    JE L5
    JMP L4
L5:
    MOV AH,1
    INT 21H
    MOV RETURN, AL
    JMP BEGIN

VERT:
     CLEAR_SCREEN
     MOV CX, 0000
L6:
     SET_CURSOR 00, CL
     WRITE_CHAR ' ', 2FH, 27
     INC CX
     CMP CX, 50
     JE L7
     JMP L6
L7:
     MOV CX, 0000
L8:
     SET_CURSOR 27, CL
     WRITE_CHAR ' ', 4FH, 27
     INC CX
     CMP CX, 50
     JE L9
     JMP L8
L9:
     MOV CX, 0000
L10:
     SET_CURSOR 53, CL
     WRITE_CHAR ' ', 1FH, 28
     INC CX
     CMP CX, 50
     JE STOP
     JMP L10
STOP:
     MOV AH,1
     INT 21H
     MOV RETURN, AL
     JMP BEGIN

QUIT:
;;;;;;;;END;;;;;;;;
  MOV AH,4CH
  INT 21H


MAIN ENDP

END